-- Database: test

-- DROP DATABASE test;

CREATE DATABASE test
  WITH OWNER = test_admin
       ENCODING = 'UTF8'
       TABLESPACE = pg_default
       LC_COLLATE = 'en_US.UTF-8'
       LC_CTYPE = 'en_US.UTF-8'
       CONNECTION LIMIT = -1;



-- Role: postgres

-- DROP ROLE postgres;

CREATE ROLE postgres LOGIN
  ENCRYPTED PASSWORD 'md59df270eb52907fff723d9b8b7436113a'
  SUPERUSER INHERIT CREATEDB CREATEROLE REPLICATION;


-- Role: test_admin

-- DROP ROLE test_admin;

CREATE ROLE test_admin LOGIN
  ENCRYPTED PASSWORD 'md542bd12e9350f09364984c2331ef1b634'
  SUPERUSER INHERIT CREATEDB CREATEROLE NOREPLICATION;

-- Extension: plpgsql

-- DROP EXTENSION plpgsql;

 CREATE EXTENSION plpgsql
  SCHEMA pg_catalog
  VERSION "1.0";


-- Table: adminuser

-- DROP TABLE adminuser;

CREATE TABLE adminuser
(
  userid character varying(255) NOT NULL,
  CONSTRAINT adminuser_pkey PRIMARY KEY (userid),
  CONSTRAINT "adminuser_userID_fkey" FOREIGN KEY (userid)
      REFERENCES eventuser (id) MATCH SIMPLE
      ON UPDATE CASCADE ON DELETE CASCADE
)
WITH (
  OIDS=FALSE
);
ALTER TABLE adminuser
  OWNER TO test_admin;

-- Table: category

-- DROP TABLE category;

CREATE TABLE category
(
  category_name character varying NOT NULL,
  category_db character varying NOT NULL,
  CONSTRAINT category_pkey PRIMARY KEY (category_name),
  CONSTRAINT category_category_db_key UNIQUE (category_db)
)
WITH (
  OIDS=FALSE
);
ALTER TABLE category
  OWNER TO test_admin;

-- Table: category_card

-- DROP TABLE category_card;

CREATE TABLE category_card
(
  event_id character varying NOT NULL,
  CONSTRAINT category_card_pkey PRIMARY KEY (event_id),
  CONSTRAINT category_card_event_id_fkey FOREIGN KEY (event_id)
      REFERENCES event (id) MATCH SIMPLE
      ON UPDATE CASCADE ON DELETE CASCADE
)
WITH (
  OIDS=FALSE
);
ALTER TABLE category_card
  OWNER TO test_admin;

-- Table: category_drink

-- DROP TABLE category_drink;

CREATE TABLE category_drink
(
  event_id character varying NOT NULL,
  CONSTRAINT category_drink_pkey PRIMARY KEY (event_id),
  CONSTRAINT category_drink_event_id_fkey FOREIGN KEY (event_id)
      REFERENCES event (id) MATCH SIMPLE
      ON UPDATE CASCADE ON DELETE CASCADE
)
WITH (
  OIDS=FALSE
);
ALTER TABLE category_drink
  OWNER TO test_admin;

-- Table: category_music

-- DROP TABLE category_music;

CREATE TABLE category_music
(
  event_id character varying NOT NULL,
  CONSTRAINT category_music_pkey PRIMARY KEY (event_id),
  CONSTRAINT category_music_event_id_fkey FOREIGN KEY (event_id)
      REFERENCES event (id) MATCH SIMPLE
      ON UPDATE CASCADE ON DELETE CASCADE
)
WITH (
  OIDS=FALSE
);
ALTER TABLE category_music
  OWNER TO test_admin;

-- Table: category_party

-- DROP TABLE category_party;

CREATE TABLE category_party
(
  event_id character varying NOT NULL,
  CONSTRAINT category_party_pkey PRIMARY KEY (event_id),
  CONSTRAINT category_party_event_id_fkey FOREIGN KEY (event_id)
      REFERENCES event (id) MATCH SIMPLE
      ON UPDATE CASCADE ON DELETE CASCADE
)
WITH (
  OIDS=FALSE
);
ALTER TABLE category_party
  OWNER TO test_admin;

-- Table: category_sclubs

-- DROP TABLE category_sclubs;

CREATE TABLE category_sclubs
(
  event_id character varying NOT NULL,
  CONSTRAINT category_sclubs_pkey PRIMARY KEY (event_id),
  CONSTRAINT category_sclubs_event_id_fkey FOREIGN KEY (event_id)
      REFERENCES event (id) MATCH SIMPLE
      ON UPDATE CASCADE ON DELETE CASCADE
)
WITH (
  OIDS=FALSE
);
ALTER TABLE category_sclubs
  OWNER TO test_admin;

-- Table: category_sports

-- DROP TABLE category_sports;

CREATE TABLE category_sports
(
  event_id character varying NOT NULL,
  CONSTRAINT category_sports_pkey PRIMARY KEY (event_id),
  CONSTRAINT category_sports_event_id_fkey FOREIGN KEY (event_id)
      REFERENCES event (id) MATCH SIMPLE
      ON UPDATE CASCADE ON DELETE CASCADE
)
WITH (
  OIDS=FALSE
);
ALTER TABLE category_sports
  OWNER TO test_admin;

-- Table: category_vacation

-- DROP TABLE category_vacation;

CREATE TABLE category_vacation
(
  event_id character varying NOT NULL,
  CONSTRAINT category_vacation_pkey PRIMARY KEY (event_id),
  CONSTRAINT category_vacation_event_id_fkey FOREIGN KEY (event_id)
      REFERENCES event (id) MATCH SIMPLE
      ON UPDATE CASCADE ON DELETE CASCADE
)
WITH (
  OIDS=FALSE
);
ALTER TABLE category_vacation
  OWNER TO test_admin;

-- Table: category_watch

-- DROP TABLE category_watch;

CREATE TABLE category_watch
(
  event_id character varying NOT NULL,
  CONSTRAINT category_watch_pkey PRIMARY KEY (event_id),
  CONSTRAINT category_watch_event_id_fkey FOREIGN KEY (event_id)
      REFERENCES event (id) MATCH SIMPLE
      ON UPDATE CASCADE ON DELETE CASCADE
)
WITH (
  OIDS=FALSE
);
ALTER TABLE category_watch
  OWNER TO test_admin;

-- Table: event

-- DROP TABLE event;

CREATE TABLE event
(
  id character varying(255) NOT NULL,
  address character varying(255),
  adminid character varying(255) NOT NULL,
  category character varying(255) NOT NULL,
  date timestamp without time zone,
  description character varying(255),
  expiredate timestamp without time zone,
  name character varying(255) NOT NULL,
  online boolean NOT NULL,
  place character varying(255),
  CONSTRAINT event_pkey PRIMARY KEY (id)
)
WITH (
  OIDS=FALSE
);
ALTER TABLE event
  OWNER TO test_admin;

-- Table: event_badges

-- DROP TABLE event_badges;

CREATE TABLE event_badges
(
  badge_name character varying(30) NOT NULL,
  badge_description character varying(250) NOT NULL,
  badge_category character varying NOT NULL,
  badge_id serial NOT NULL,
  CONSTRAINT event_badges_pkey PRIMARY KEY (badge_id),
  CONSTRAINT event_badges_badge_category_fkey FOREIGN KEY (badge_category)
      REFERENCES category (category_name) MATCH SIMPLE
      ON UPDATE CASCADE ON DELETE CASCADE,
  CONSTRAINT event_badges_badge_name_key UNIQUE (badge_name)
)
WITH (
  OIDS=FALSE
);
ALTER TABLE event_badges
  OWNER TO test_admin;

-- Table: event_comment

-- DROP TABLE event_comment;

CREATE TABLE event_comment
(
  event_id character varying NOT NULL,
  user_id character varying NOT NULL,
  comment character varying(300),
  CONSTRAINT event_comment_pkey PRIMARY KEY (event_id, user_id),
  CONSTRAINT event_comment_event_id_fkey FOREIGN KEY (event_id)
      REFERENCES event (id) MATCH SIMPLE
      ON UPDATE CASCADE ON DELETE CASCADE,
  CONSTRAINT event_comment_user_id_fkey FOREIGN KEY (user_id)
      REFERENCES eventuser (id) MATCH SIMPLE
      ON UPDATE CASCADE ON DELETE CASCADE
)
WITH (
  OIDS=FALSE
);
ALTER TABLE event_comment
  OWNER TO test_admin;

-- Table: event_like

-- DROP TABLE event_like;

CREATE TABLE event_like
(
  eventid character varying NOT NULL,
  senderid character varying NOT NULL,
  CONSTRAINT likeevent_pkey PRIMARY KEY (eventid, senderid),
  CONSTRAINT likeevent_event_id_fkey FOREIGN KEY (eventid)
      REFERENCES event (id) MATCH SIMPLE
      ON UPDATE CASCADE ON DELETE CASCADE,
  CONSTRAINT likeevent_user_id_fkey FOREIGN KEY (senderid)
      REFERENCES eventuser (id) MATCH SIMPLE
      ON UPDATE CASCADE ON DELETE CASCADE
)
WITH (
  OIDS=FALSE
);
ALTER TABLE event_like
  OWNER TO test_admin;

-- Table: event_members

-- DROP TABLE event_members;

CREATE TABLE event_members
(
  event_id character varying NOT NULL,
  user_id character varying NOT NULL,
  CONSTRAINT event_members_pkey PRIMARY KEY (event_id, user_id),
  CONSTRAINT event_members_event_id_fkey FOREIGN KEY (event_id)
      REFERENCES event (id) MATCH SIMPLE
      ON UPDATE CASCADE ON DELETE CASCADE,
  CONSTRAINT event_members_user_id_fkey FOREIGN KEY (user_id)
      REFERENCES eventuser (id) MATCH SIMPLE
      ON UPDATE CASCADE ON DELETE CASCADE
)
WITH (
  OIDS=FALSE
);
ALTER TABLE event_members
  OWNER TO test_admin;

-- Table: eventrequest

-- DROP TABLE eventrequest;

CREATE TABLE eventrequest
(
  "senderID" character varying(255) NOT NULL,
  "eventID" character varying(255) NOT NULL,
  message character varying(255),
  eventid character varying(255) NOT NULL,
  senderid character varying(255) NOT NULL,
  CONSTRAINT eventrequest_pkey PRIMARY KEY ("senderID", "eventID"),
  CONSTRAINT "eventrequest_eventID_fkey" FOREIGN KEY ("eventID")
      REFERENCES event (id) MATCH SIMPLE
      ON UPDATE CASCADE ON DELETE CASCADE,
  CONSTRAINT "eventrequest_senderID_fkey" FOREIGN KEY ("senderID")
      REFERENCES eventuser (id) MATCH SIMPLE
      ON UPDATE CASCADE ON DELETE CASCADE
)
WITH (
  OIDS=FALSE
);
ALTER TABLE eventrequest
  OWNER TO test_admin;

-- Table: eventuser

-- DROP TABLE eventuser;

CREATE TABLE eventuser
(
  id character varying(255) NOT NULL,
  age integer NOT NULL,
  email character varying(255),
  name character varying(255),
  password character varying(255),
  scope integer NOT NULL,
  surname character varying(255),
  university character varying(255),
  pic_url character varying,
  CONSTRAINT eventuser_pkey PRIMARY KEY (id)
)
WITH (
  OIDS=FALSE
);
ALTER TABLE eventuser
  OWNER TO test_admin;


-- Sequence: event_badges_badge_id_seq

-- DROP SEQUENCE event_badges_badge_id_seq;

CREATE SEQUENCE event_badges_badge_id_seq
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 1
  CACHE 1;
ALTER TABLE event_badges_badge_id_seq
  OWNER TO test_admin;



